# https://github.com/actions/starter-workflows/blob/main/deployments/azure-staticwebapp.yml
# This workflow will build and push a web application to an Azure Static Web App when you change your code.
#
# This workflow assumes you have already created the target Azure Static Web App.
# For instructions see https://docs.microsoft.com/azure/static-web-apps/get-started-portal?tabs=vanilla-javascript
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_STATIC_WEB_APPS_API_TOKEN with the value of your Static Web Apps deployment token.
#    For instructions on obtaining the deployment token see: https://docs.microsoft.com/azure/static-web-apps/deployment-token-management
#
# 3. Change the values for the APP_LOCATION, API_LOCATION and APP_ARTIFACT_LOCATION, AZURE_STATIC_WEB_APPS_API_TOKEN environment variables (below).
#    For instructions on setting up the appropriate configuration values go to https://docs.microsoft.com/azure/static-web-apps/front-end-frameworks
name: Azure Static Web App Continuous Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - closed

# Environment variables available to all jobs and steps in this workflow
env:
  AZURE_LOCATION: westeurope
  # AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }} # secret containing deployment token for your static web app
  AZURE_STATIC_WEB_APP_NAME: lzswablazor
  AZURE_STATIC_WEB_APP_API_LOCATION: "Api"
  AZURE_STATIC_WEB_APP_APP_LOCATION: "Client"
  AZURE_STATIC_WEB_APP_OUTPUT_LOCATION: "wwwroot"

jobs:
  infrastructure:
    name: Infrastructure
    permissions:
      contents: read
    environment: infrastructure
    runs-on: ubuntu-latest

    outputs:
      name: ${{ steps.deploy.outputs.name }}
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - uses: actions/checkout@v3
      # https://docs.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-cli%2Cwindows&tryIt=true&source=docs#use-the-azure-login-action-with-openid-connect
      - name: Azure login via Azure AD service principal
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - id: deploy
        uses: ./.github/actions/deploy-infrastructure
        with:
          api_location: ${{ env.AZURE_STATIC_WEB_APP_API_LOCATION }}
          application_name: ${{ env.AZURE_STATIC_WEB_APP_NAME }}
          app_location: ${{ env.AZURE_STATIC_WEB_APP_APP_LOCATION }}
          location: ${{ env.AZURE_LOCATION }}
          output_location: ${{ env.AZURE_STATIC_WEB_APP_OUTPUT_LOCATION }}
          repository_token: ${{ secrets.STATIC_SITES_REPOSITORY_TOKEN }}
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    needs:
      - infrastructure
    name: Build and Deploy Job
    permissions:
      contents: read
      # Azure/login requires id-token write permission to use Federated Identity credentials
      id-token: write
    environment:
      name: production
      url: ${{ needs.infrastructure.outputs.url }} # https://xxxxx.y.azurestaticapps.net
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      # https://docs.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-cli%2Cwindows&tryIt=true&source=docs#use-the-azure-login-action-with-openid-connect
      - name: Azure OIDC login via Azure AD Federated Identity Credentials
        uses: Azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - id: deployment_token
        uses: ./.github/actions/staticwebapps-get-deployment-token
        with:
          name: ${{ needs.infrastructure.outputs.name }}
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        # https://github.com/Azure/static-web-apps-deploy/blob/v1/action.yml
        with:
          # https://docs.microsoft.com/da-dk/azure/static-web-apps/deployment-token-management
          # azure_static_web_apps_api_token: ${{ steps.deployment_token.outputs.deployment_token }} # secret containing api token for app
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: upload
          ###### Repository/Build Configurations - These values can be configured to match you app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: ${{ env.AZURE_STATIC_WEB_APP_APP_LOCATION }}
          api_location: ${{ env.AZURE_STATIC_WEB_APP_API_LOCATION }}
          app_artifact_location: ${{ env.AZURE_STATIC_WEB_APP_OUTPUT_LOCATION }}
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    needs:
      - infrastructure
    name: Close Pull Request Job
    permissions:
      contents: read
      # Azure/login requires id-token write permission to use Federated Identity credentials
      id-token: write
    environment:
      name: production
      url: ${{ needs.infrastructure.outputs.url }} # https://xxxxx.y.azurestaticapps.net
    runs-on: ubuntu-latest

    steps:
      # https://docs.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-cli%2Cwindows&tryIt=true&source=docs#use-the-azure-login-action-with-openid-connect
      - name: Azure OIDC login via Azure AD Federated Identity Credentials
        uses: Azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - id: deployment_token
        uses: ./.github/actions/staticwebapps-get-deployment-token
        with:
          name: ${{ needs.infrastructure.outputs.name }}
      - name: Close Pull Request
        uses: Azure/static-web-apps-deploy@v1
        with:
          # azure_static_web_apps_api_token: ${{ steps.deployment_token.outputs.deployment_token }} # secret containing api token for app
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: close
