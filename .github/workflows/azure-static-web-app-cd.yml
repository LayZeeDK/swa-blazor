# https://github.com/actions/starter-workflows/blob/main/deployments/azure-staticwebapp.yml
# This workflow will build and push a web application to an Azure Static Web App when you change your code.
#
# This workflow assumes you have already created the target Azure Static Web App.
# For instructions see https://docs.microsoft.com/azure/static-web-apps/get-started-portal?tabs=vanilla-javascript
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_STATIC_WEB_APPS_API_TOKEN with the value of your Static Web Apps deployment token.
#    For instructions on obtaining the deployment token see: https://docs.microsoft.com/azure/static-web-apps/deployment-token-management
#
# 3. Change the values for the APP_LOCATION, API_LOCATION and APP_ARTIFACT_LOCATION, AZURE_STATIC_WEB_APPS_API_TOKEN environment variables (below).
#    For instructions on setting up the appropriate configuration values go to https://docs.microsoft.com/azure/static-web-apps/front-end-frameworks
name: Azure Static Web App Continuous Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed
      - opened
      - reopened
      - synchronize

# TODO(LayZeeDK) concurrency:

env:
  # Azure
  AZURE_APPLICATION_NAME: lzswablazor
  AZURE_CLIENT_ID: "c0a4c399-1b5d-4732-a601-c65ca844bb03"
  AZURE_REGION: westeurope
  AZURE_SUBSCRIPTION_ID: "31629f13-425a-4a2d-ae00-f17bb9391120"
  AZURE_TENANT_ID: "9b7d4cbe-0d0b-47ee-8838-553411852ede"

  # Static Web App build
  API_LOCATION: Api
  APP_LOCATION: Client
  OUTPUT_LOCATION: wwwroot

jobs:
  arm_resource_group:
    name: "ARM: Set up resource group with scoped Workspace Identity credentials"
    permissions:
      contents: read
    environment: subscription
    runs-on: ubuntu-latest

    outputs:
      name: ${{ steps.resource_group.outputs.name }}

    steps:
      - uses: actions/checkout@v3
      - name: Azure login via Azure AD service principal
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - id: resource_group
        name: Deploy resource group
        uses: ./.github/actions/arm-deploy-resource-group
        with:
          application_name: ${{ env.AZURE_APPLICATION_NAME }}
          location: ${{ env.AZURE_REGION }}
          subscription_id: ${{ env.AZURE_SUBSCRIPTION_ID }}
      - id: workspace-identity
        name: Set up Workspace Identity credentials for Azure OIDC login
        uses: ./.github/actions/set-up-workspace-identity-credentials
        with:
          subscription_id: ${{ env.AZURE_SUBSCRIPTION_ID }}

  arm_static_web_app:
    name: "ARM: Deploy Static Web App"
    needs:
      - arm_resource_group
    permissions:
      contents: read
      # Azure/login requires id-token write permission to use Workspace Identity credentials
      id-token: write
    environment: production
    runs-on: ubuntu-latest

    outputs:
      deployment_token: ${{ steps.static_web_app.outputs.deployment_token }}
      url: ${{ steps.static_web_app.outputs.url }}

    steps:
      - uses: actions/checkout@v3
      - name: Azure OIDC login via Azure AD Federated Identity Credentials
        uses: Azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
      - id: static_web_app
        name: Deploy Static Web App
        uses: ./.github/actions/arm-deploy-static-web-app
        with:
          api_location: ${{ env.API_LOCATION }}
          application_name: ${{ env.AZURE_APPLICATION_NAME }}
          app_location: ${{ env.APP_LOCATION }}
          existing_resource_group: ${{ needs.arm_resource_group.outputs.name }}
          location: ${{ env.AZURE_REGION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
          repository_token: ${{ secrets.STATIC_SITES_REPOSITORY_TOKEN }}

  build_and_deploy_static_web_app:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    needs:
      - arm_resource_group
      - arm_static_web_app
    name: >-
      Build and deploy Static Web App to
      ${{ github.event_name == 'push' && 'production' || 'preview' }}
      environment
    permissions:
      contents: read
      # Azure/login requires id-token write permission to use Workspace Identity credentials
      id-token: write
    environment:
      name: ${{ github.event_name == 'push' && 'production' || 'preview' }}
      url: ${{ needs.arm_static_web_app.outputs.url }} # https://xxxxx.y.azurestaticapps.net
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Azure OIDC login via Azure AD Federated Identity Credentials
        uses: Azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
      - name: Build And Deploy
        uses: Azure/static-web-apps-deploy@v1
        env:
          DEPLOYMENT_TOKEN: ${{ needs.arm_static_web_app.outputs.deployment_token }}
        # https://github.com/Azure/static-web-apps-deploy/blob/v1/action.yml
        with:
          action: upload
          api_location: ${{ env.API_LOCATION }}
          app_artifact_location: ${{ env.OUTPUT_LOCATION }}
          app_location: ${{ env.APP_LOCATION }}
          # https://docs.microsoft.com/da-dk/azure/static-web-apps/deployment-token-management
          azure_static_web_apps_api_token: ${{ env.DEPLOYMENT_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    needs:
      - arm_static_web_app
    name: Close pull request
    permissions:
      # Azure/login requires id-token write permission to use Federated Identity credentials
      id-token: write
    environment:
      name: preview
      url: ${{ needs.arm_static_web_app.outputs.url }} # https://xxxxx.y.azurestaticapps.net
    runs-on: ubuntu-latest

    steps:
      - name: Azure OIDC login via Azure AD Federated Identity Credentials
        uses: Azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
      - name: Close pull request
        uses: Azure/static-web-apps-deploy@v1
        env:
          DEPLOYMENT_TOKEN: ${{ needs.arm_static_web_app.outputs.deployment_token }}
        # https://github.com/Azure/static-web-apps-deploy/blob/v1/action.yml
        with:
          action: close
          # https://docs.microsoft.com/da-dk/azure/static-web-apps/deployment-token-management
          azure_static_web_apps_api_token: ${{ env.DEPLOYMENT_TOKEN }}
